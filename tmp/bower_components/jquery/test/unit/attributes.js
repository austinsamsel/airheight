module("attributes",{teardown:moduleTeardown});var bareObj=function(e){return e},functionReturningObj=function(e){return function(){return e}};test("jQuery.propFix integrity test",function(){expect(1);var e={tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"};jQuery.support.enctype||(e.enctype="encoding"),deepEqual(e,jQuery.propFix,"jQuery.propFix passes integrity check")}),test("attr(String)",function(){expect(46),equal(jQuery("#text1").attr("type"),"text","Check for type attribute"),equal(jQuery("#radio1").attr("type"),"radio","Check for type attribute"),equal(jQuery("#check1").attr("type"),"checkbox","Check for type attribute"),equal(jQuery("#simon1").attr("rel"),"bookmark","Check for rel attribute"),equal(jQuery("#google").attr("title"),"Google!","Check for title attribute"),equal(jQuery("#mark").attr("hreflang"),"en","Check for hreflang attribute"),equal(jQuery("#en").attr("lang"),"en","Check for lang attribute"),equal(jQuery("#simon").attr("class"),"blog link","Check for class attribute"),equal(jQuery("#name").attr("name"),"name","Check for name attribute"),equal(jQuery("#text1").attr("name"),"action","Check for name attribute"),ok(jQuery("#form").attr("action").indexOf("formaction")>=0,"Check for action attribute"),equal(jQuery("#text1").attr("value","t").attr("value"),"t","Check setting the value attribute"),equal(jQuery("<div value='t'></div>").attr("value"),"t","Check setting custom attr named 'value' on a div"),equal(jQuery("#form").attr("blah","blah").attr("blah"),"blah","Set non-existant attribute on a form"),equal(jQuery("#foo").attr("height"),void 0,"Non existent height attribute should return undefined");var e=jQuery("<input name='id' name='name' /><input id='target' name='target' />").appendTo("#testForm");equal(jQuery("#form").attr("action","newformaction").attr("action"),"newformaction","Check that action attribute was changed"),equal(jQuery("#testForm").attr("target"),void 0,"Retrieving target does not equal the input with name=target"),equal(jQuery("#testForm").attr("target","newTarget").attr("target"),"newTarget","Set target successfully on a form"),equal(jQuery("#testForm").removeAttr("id").attr("id"),void 0,"Retrieving id does not equal the input with name=id after id is removed [#7472]"),equal(jQuery("#testForm").attr("name"),void 0,"Retrieving name does not retrieve input with name=name"),e.remove(),equal(jQuery("#text1").attr("maxlength"),"30","Check for maxlength attribute"),equal(jQuery("#text1").attr("maxLength"),"30","Check for maxLength attribute"),equal(jQuery("#area1").attr("maxLength"),"30","Check for maxLength attribute"),jQuery("<a/>").attr({id:"tAnchor5",href:"#5"}).appendTo("#qunit-fixture"),equal(jQuery("#tAnchor5").attr("href"),"#5","Check for non-absolute href (an anchor)"),jQuery("#list-test").attr("list","datalist"),equal(jQuery("#list-test").attr("list"),"datalist","Check setting list attribute");var t=document.body,a=jQuery(t);strictEqual(a.attr("foo"),void 0,"Make sure that a non existent attribute returns undefined"),t.setAttribute("foo","baz"),equal(a.attr("foo"),"baz","Make sure the dom attribute is retrieved when no expando is found"),a.attr("foo","cool"),equal(a.attr("foo"),"cool","Make sure that setting works well when both expando and dom attribute are available"),t.removeAttribute("foo");var r=document.createElement("select"),o=document.createElement("optgroup"),n=document.createElement("option");o.appendChild(n),r.appendChild(o),equal(jQuery(n).attr("selected"),"selected","Make sure that a single option is selected, even when in an optgroup.");var s=jQuery("<img style='display:none' width='215' height='53' src='http://static.jquery.com/files/rocker/images/logo_jquery_215x53.gif'/>").appendTo("body");equal(s.attr("width"),"215","Retrieve width attribute an an element with display:none."),equal(s.attr("height"),"53","Retrieve height attribute an an element with display:none."),ok(!!~jQuery("#dl").attr("style").indexOf("position"),"Check style attribute getter, also normalize css props to lowercase"),ok(!!~jQuery("#foo").attr("style","position:absolute;").attr("style").indexOf("position"),"Check style setter");var l=jQuery("<button value='foobar'>text</button>").insertAfter("#button");equal(l.attr("value"),"foobar","Value retrieval on a button does not return innerHTML"),equal(l.attr("value","baz").html(),"text","Setting the value does not change innerHTML"),equal(jQuery("#table").attr("test:attrib"),void 0,"Retrieving a non-existent attribute on a table with a colon does not throw an error."),equal(jQuery("#table").attr("test:attrib","foobar").attr("test:attrib"),"foobar","Setting an attribute on a table with a colon does not throw an error.");var i=jQuery("<form class='something'></form>").appendTo("#qunit-fixture");equal(i.attr("class"),"something","Retrieve the class attribute on a form.");var u=jQuery("<a href='#' onclick='something()'>Click</a>").appendTo("#qunit-fixture");equal(u.attr("onclick"),"something()","Retrieve ^on attribute without anonymous function wrapper."),ok(void 0===jQuery("<div/>").attr("doesntexist"),"Make sure undefined is returned when no attribute is found."),ok(void 0===jQuery("<div/>").attr("title"),"Make sure undefined is returned when no attribute is found."),equal(jQuery("<div/>").attr("title","something").attr("title"),"something","Set the title attribute."),ok(void 0===jQuery().attr("doesntexist"),"Make sure undefined is returned when no element is there."),equal(jQuery("<div/>").attr("value"),void 0,"An unset value on a div returns undefined."),equal(jQuery("<input/>").attr("value"),"","An unset value on an input returns current value."),i=jQuery("#form").attr("enctype","multipart/form-data"),equal(i.prop("enctype"),"multipart/form-data","Set the enctype of a form (encoding in IE6/7 #6743)")}),test("attr(String) in XML Files",function(){expect(3);var e=createDashboardXML();equal(jQuery("locations",e).attr("class"),"foo","Check class attribute in XML document"),equal(jQuery("location",e).attr("for"),"bar","Check for attribute in XML document"),equal(jQuery("location",e).attr("checked"),"different","Check that hooks are not attached in XML document")}),test("attr(String, Function)",function(){expect(2),equal(jQuery("#text1").attr("value",function(){return this.id})[0].value,"text1","Set value from id"),equal(jQuery("#text1").attr("title",function(e){return e}).attr("title"),"0","Set value with an index")}),test("attr(Hash)",function(){expect(3);var e=!0;jQuery("div").attr({foo:"baz",zoo:"ping"}).each(function(){"baz"!=this.getAttribute("foo")&&"ping"!=this.getAttribute("zoo")&&(e=!1)}),ok(e,"Set Multiple Attributes"),equal(jQuery("#text1").attr({value:function(){return this.id}})[0].value,"text1","Set attribute to computed value #1"),equal(jQuery("#text1").attr({title:function(e){return e}}).attr("title"),"0","Set attribute to computed value #2")}),test("attr(String, Object)",function(){expect(81);for(var e=jQuery("div").attr("foo","bar"),t=!1,a=0;a<e.size();a++)if("bar"!=e.get(a).getAttribute("foo")){t=a;break}equal(t,!1,"Set Attribute, the #"+t+" element didn't get the attribute 'foo'"),ok(jQuery("#foo").attr({width:null}),"Try to set an attribute to nothing"),jQuery("#name").attr("name","something"),equal(jQuery("#name").attr("name"),"something","Set name attribute"),jQuery("#name").attr("name",null),equal(jQuery("#name").attr("name"),void 0,"Remove name attribute");var r=jQuery("<input>",{name:"something",id:"specified"});equal(r.attr("name"),"something","Check element creation gets/sets the name attribute."),equal(r.attr("id"),"specified","Check element creation gets/sets the id attribute."),jQuery("#check2").prop("checked",!0).prop("checked",!1).attr("checked",!0),equal(document.getElementById("check2").checked,!0,"Set checked attribute"),equal(jQuery("#check2").prop("checked"),!0,"Set checked attribute"),equal(jQuery("#check2").attr("checked"),"checked","Set checked attribute"),jQuery("#check2").attr("checked",!1),equal(document.getElementById("check2").checked,!1,"Set checked attribute"),equal(jQuery("#check2").prop("checked"),!1,"Set checked attribute"),equal(jQuery("#check2").attr("checked"),void 0,"Set checked attribute"),jQuery("#text1").attr("readonly",!0),equal(document.getElementById("text1").readOnly,!0,"Set readonly attribute"),equal(jQuery("#text1").prop("readOnly"),!0,"Set readonly attribute"),equal(jQuery("#text1").attr("readonly"),"readonly","Set readonly attribute"),jQuery("#text1").attr("readonly",!1),equal(document.getElementById("text1").readOnly,!1,"Set readonly attribute"),equal(jQuery("#text1").prop("readOnly"),!1,"Set readonly attribute"),equal(jQuery("#text1").attr("readonly"),void 0,"Set readonly attribute"),jQuery("#check2").prop("checked",!0),equal(document.getElementById("check2").checked,!0,"Set checked attribute"),equal(jQuery("#check2").prop("checked"),!0,"Set checked attribute"),equal(jQuery("#check2").attr("checked"),"checked","Set checked attribute"),jQuery("#check2").prop("checked",!1),equal(document.getElementById("check2").checked,!1,"Set checked attribute"),equal(jQuery("#check2").prop("checked"),!1,"Set checked attribute"),equal(jQuery("#check2").attr("checked"),void 0,"Set checked attribute"),jQuery("#check2").attr("checked","checked"),equal(document.getElementById("check2").checked,!0,"Set checked attribute with 'checked'"),equal(jQuery("#check2").prop("checked"),!0,"Set checked attribute"),equal(jQuery("#check2").attr("checked"),"checked","Set checked attribute"),QUnit.reset();var o=jQuery("#checkedtest").find("input[type='radio']");o.eq(1).click(),equal(o.eq(1).prop("checked"),!0,"Second radio was checked when clicked"),equal(o.attr("checked"),o[0].checked?"checked":void 0,"Known booleans do not fall back to attribute presence (#10278)"),jQuery("#text1").prop("readOnly",!0),equal(document.getElementById("text1").readOnly,!0,"Set readonly attribute"),equal(jQuery("#text1").prop("readOnly"),!0,"Set readonly attribute"),equal(jQuery("#text1").attr("readonly"),"readonly","Set readonly attribute"),jQuery("#text1").prop("readOnly",!1),equal(document.getElementById("text1").readOnly,!1,"Set readonly attribute"),equal(jQuery("#text1").prop("readOnly"),!1,"Set readonly attribute"),equal(jQuery("#text1").attr("readonly"),void 0,"Set readonly attribute"),jQuery("#name").attr("maxlength","5"),equal(document.getElementById("name").maxLength,5,"Set maxlength attribute"),jQuery("#name").attr("maxLength","10"),equal(document.getElementById("name").maxLength,10,"Set maxlength attribute");var n=jQuery("#text1").attr({autofocus:!0,required:!0});equal(n.attr("autofocus"),"autofocus","Set boolean attributes to the same name"),equal(n.attr("autofocus",!1).attr("autofocus"),void 0,"Setting autofocus attribute to false removes it"),equal(n.attr("required"),"required","Set boolean attributes to the same name"),equal(n.attr("required",!1).attr("required"),void 0,"Setting required attribute to false removes it");var s=jQuery("<details open></details>").appendTo("#qunit-fixture");equal(s.attr("open"),"open","open attribute presense indicates true"),equal(s.attr("open",!1).attr("open"),void 0,"Setting open attribute to false removes it"),n.attr("data-something",!0),equal(n.attr("data-something"),"true","Set data attributes"),equal(n.data("something"),!0,"Setting data attributes are not affected by boolean settings"),n.attr("data-another",!1),equal(n.attr("data-another"),"false","Set data attributes"),equal(n.data("another"),!1,"Setting data attributes are not affected by boolean settings"),equal(n.attr("aria-disabled",!1).attr("aria-disabled"),"false","Setting aria attributes are not affected by boolean settings"),n.removeData("something").removeData("another").removeAttr("aria-disabled"),jQuery("#foo").attr("contenteditable",!0),equal(jQuery("#foo").attr("contenteditable"),"true","Enumerated attributes are set properly");var l=document.createAttribute("irrelevant"),i=document.createComment("some comment"),u=document.createTextNode("some text"),c={};jQuery.each([i,u,l],function(e,t){var a=jQuery(t);a.attr("nonexisting","foo"),strictEqual(a.attr("nonexisting"),void 0,"attr(name, value) works correctly on comment and text nodes (bug #7500).")}),jQuery.each([window,document,c,"#firstp"],function(e,t){var a=jQuery(t);strictEqual(a.attr("nonexisting"),void 0,"attr works correctly for non existing attributes (bug #7500)."),equal(a.attr("something","foo").attr("something"),"foo","attr falls back to prop on unsupported arguments")});var d=jQuery("#table").append("<tr><td>cell</td></tr><tr><td>cell</td><td>cell</td></tr><tr><td>cell</td><td>cell</td></tr>"),h=d.find("td:first");h.attr("rowspan","2"),equal(h[0].rowSpan,2,"Check rowspan is correctly set"),h.attr("colspan","2"),equal(h[0].colSpan,2,"Check colspan is correctly set"),d.attr("cellspacing","2"),equal(d[0].cellSpacing,"2","Check cellspacing is correctly set"),equal(jQuery("#area1").attr("value"),"foobar","Value attribute retrieves the property for backwards compatibility."),jQuery("#name").attr("someAttr","0"),equal(jQuery("#name").attr("someAttr"),"0",'Set attribute to a string of "0"'),jQuery("#name").attr("someAttr",0),equal(jQuery("#name").attr("someAttr"),"0","Set attribute to the number 0"),jQuery("#name").attr("someAttr",1),equal(jQuery("#name").attr("someAttr"),"1","Set attribute to the number 1");var p=jQuery("#nonnodes").contents();p.attr("name","attrvalue"),equal(p.attr("name"),"attrvalue","Check node,textnode,comment for attr"),p.removeAttr("name");var m=jQuery("#check2").attr("type"),v=!1;try{jQuery("#check2").attr("type","hidden")}catch(y){v=!0}ok(v,"Exception thrown when trying to change type property"),equal(m,jQuery("#check2").attr("type"),"Verify that you can't change the type of an input element");var b=document.createElement("input");v=!0;try{jQuery(b).attr("type","checkbox")}catch(y){v=!1}ok(v,"Exception thrown when trying to change type property"),equal("checkbox",jQuery(b).attr("type"),"Verify that you can change the type of an input element that isn't in the DOM"),b=jQuery("<input />"),v=!0;try{b.attr("type","checkbox")}catch(y){v=!1}ok(v,"Exception thrown when trying to change type property"),equal("checkbox",b.attr("type"),"Verify that you can change the type of an input element that isn't in the DOM");var f=jQuery("#button");v=!1;try{f.attr("type","submit")}catch(y){v=!0}ok(v,"Exception thrown when trying to change type property"),equal("button",f.attr("type"),"Verify that you can't change the type of a button element");var g=jQuery("<input>",{value:"sup",type:"radio"}).appendTo("#testForm");equal(g.val(),"sup","Value is not reset when type is set after value on a radio");var k=jQuery("<svg xmlns='http://www.w3.org/2000/svg'   xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1'  baseProfile='full' width='200' height='200'><circle cx='200' cy='200' r='150' /></svg>").appendTo("body");equal(k.attr("cx",100).attr("cx"),"100","Set attribute on svg element"),k.remove(),jQuery("#name").attr("maxlength","5").removeAttr("nonexisting"),equal(typeof jQuery("#name").attr("maxlength",void 0),"object",".attr('attribute', undefined) is chainable (#5571)"),equal(jQuery("#name").attr("maxlength",void 0).attr("maxlength"),"5",".attr('attribute', undefined) does not change value (#5571)"),equal(jQuery("#name").attr("nonexisting",void 0).attr("nonexisting"),void 0,".attr('attribute', undefined) does not create attribute (#5571)")}),test("attr(jquery_method)",function(){var e=jQuery("<div />"),t=e[0],a=2,r={};jQuery.fn.width&&(a+=2,r.width=10),jQuery.fn.offset&&(a+=2,r.offset={top:1,left:0}),jQuery.css&&(a+=3,r.css={paddingLeft:1,paddingRight:1}),expect(a),e.attr({html:"foo"},!0),equal(t.innerHTML,"foo","attr(html)"),e.attr({text:"bar"},!0),equal(t.innerHTML,"bar","attr(text)"),e.attr(r,!0),jQuery.fn.width&&(equal(t.style.width,"10px","attr({width:})"),e.attr({height:10},!0),equal(t.style.height,"10px","attr(height)")),jQuery.fn.offset&&(equal(t.style.top,"1px","attr({offset:})"),e.attr({offset:{top:1,left:1}},!0),equal(t.style.left,"1px","attr(offset)")),jQuery.css&&(equal(t.style.paddingLeft,"1px","attr({css:})"),equal(t.style.paddingRight,"1px","attr({css:})"),e.attr({css:{color:"red"}},!0),ok(/^(#ff0000|red)$/i.test(t.style.color),"attr(css)"))}),test("attr(String, Object) - Loaded via XML document",function(){expect(2);var e=createDashboardXML(),t=[];jQuery("tab",e).each(function(){t.push(jQuery(this).attr("title"))}),equal(t[0],"Location","attr() in XML context: Check first title"),equal(t[1],"Users","attr() in XML context: Check second title")}),test("attr('tabindex')",function(){expect(8),equal(jQuery("#listWithTabIndex").attr("tabindex"),"5","not natively tabbable, with tabindex set to 0"),equal(jQuery("#divWithNoTabIndex").attr("tabindex"),void 0,"not natively tabbable, no tabindex set"),equal(jQuery("#linkWithNoTabIndex").attr("tabindex"),void 0,"anchor with href, no tabindex set"),equal(jQuery("#linkWithTabIndex").attr("tabindex"),"2","anchor with href, tabindex set to 2"),equal(jQuery("#linkWithNegativeTabIndex").attr("tabindex"),"-1","anchor with href, tabindex set to -1"),equal(jQuery("#linkWithNoHrefWithNoTabIndex").attr("tabindex"),void 0,"anchor without href, no tabindex set"),equal(jQuery("#linkWithNoHrefWithTabIndex").attr("tabindex"),"1","anchor without href, tabindex set to 2"),equal(jQuery("#linkWithNoHrefWithNegativeTabIndex").attr("tabindex"),"-1","anchor without href, no tabindex set")}),test("attr('tabindex', value)",function(){expect(9);var e=jQuery("#divWithNoTabIndex");equal(e.attr("tabindex"),void 0,"start with no tabindex"),e.attr("tabindex","1"),equal(e.attr("tabindex"),"1","set tabindex to 1 (string)"),e.attr("tabindex","0"),equal(e.attr("tabindex"),"0","set tabindex to 0 (string)"),e.attr("tabindex","-1"),equal(e.attr("tabindex"),"-1","set tabindex to -1 (string)"),e.attr("tabindex",1),equal(e.attr("tabindex"),"1","set tabindex to 1 (number)"),e.attr("tabindex",0),equal(e.attr("tabindex"),"0","set tabindex to 0 (number)"),e.attr("tabindex",-1),equal(e.attr("tabindex"),"-1","set tabindex to -1 (number)"),e=jQuery("#linkWithTabIndex"),equal(e.attr("tabindex"),"2","start with tabindex 2"),e.attr("tabindex",-1),equal(e.attr("tabindex"),"-1","set negative tabindex")}),test("removeAttr(String)",function(){expect(12);var e;equal(jQuery("#mark").removeAttr("class").attr("class"),void 0,"remove class"),equal(jQuery("#form").removeAttr("id").attr("id"),void 0,"Remove id"),equal(jQuery("#foo").attr("style","position:absolute;").removeAttr("style").attr("style"),void 0,"Check removing style attribute"),equal(jQuery("#form").attr("style","position:absolute;").removeAttr("style").attr("style"),void 0,"Check removing style attribute on a form"),equal(jQuery("<div style='position: absolute'></div>").appendTo("#foo").removeAttr("style").prop("style").cssText,"","Check removing style attribute (#9699 Webkit)"),equal(jQuery("#fx-test-group").attr("height","3px").removeAttr("height").get(0).style.height,"1px","Removing height attribute has no effect on height set with style attribute"),jQuery("#check1").removeAttr("checked").prop("checked",!0).removeAttr("checked"),equal(document.getElementById("check1").checked,!1,"removeAttr sets boolean properties to false"),jQuery("#text1").prop("readOnly",!0).removeAttr("readonly"),equal(document.getElementById("text1").readOnly,!1,"removeAttr sets boolean properties to false"),jQuery("#option2c").removeAttr("selected"),equal(jQuery("#option2d").attr("selected"),"selected","Removing `selected` from an option that is not selected does not remove selected from the currently selected option (#10870)");try{e=jQuery("#first").attr("contenteditable","true").removeAttr("contenteditable"),equal(e.attr("contenteditable"),void 0,"Remove the contenteditable attribute")}catch(t){ok(!1,"Removing contenteditable threw an error (#10429)")}e=jQuery("<div Case='mixed'></div>"),equal(e.attr("Case"),"mixed","case of attribute doesn't matter"),e.removeAttr("Case"),ok(!e.attr("Case"),"mixed-case attribute was removed")}),test("removeAttr(String) in XML",function(){expect(7);var e=createDashboardXML(),t=jQuery("infowindowtab",e);equal(t.attr("normal"),"ab","Check initial value"),t.removeAttr("Normal"),equal(t.attr("normal"),"ab","Should still be there"),t.removeAttr("normal"),equal(t.attr("normal"),void 0,"Removed"),equal(t.attr("mixedCase"),"yes","Check initial value"),equal(t.attr("mixedcase"),void 0,"toLowerCase not work good"),t.removeAttr("mixedcase"),equal(t.attr("mixedCase"),"yes","Should still be there"),t.removeAttr("mixedCase"),equal(t.attr("mixedCase"),void 0,"Removed")}),test("removeAttr(Multi String, variable space width)",function(){expect(8);var e=jQuery("<div id='a' alt='b' title='c' rel='d'></div>"),t={id:"a",alt:"b",title:"c",rel:"d"};jQuery.each(t,function(t,a){equal(e.attr(t),a,"Attribute `"+t+"` exists, and has a value of `"+a+"`")}),e.removeAttr("id   alt title  rel  "),jQuery.each(t,function(t){equal(e.attr(t),void 0,"Attribute `"+t+"` was removed")})}),test("prop(String, Object)",function(){expect(31),equal(jQuery("#text1").prop("value"),"Test","Check for value attribute"),equal(jQuery("#text1").prop("value","Test2").prop("defaultValue"),"Test","Check for defaultValue attribute"),equal(jQuery("#select2").prop("selectedIndex"),3,"Check for selectedIndex attribute"),equal(jQuery("#foo").prop("nodeName").toUpperCase(),"DIV","Check for nodeName attribute"),equal(jQuery("#foo").prop("tagName").toUpperCase(),"DIV","Check for tagName attribute"),equal(jQuery("<option/>").prop("selected"),!1,"Check selected attribute on disconnected element."),equal(jQuery("#listWithTabIndex").prop("tabindex"),5,"Check retrieving tabindex"),jQuery("#text1").prop("readonly",!0),equal(document.getElementById("text1").readOnly,!0,"Check setting readOnly property with 'readonly'"),equal(jQuery("#label-for").prop("for"),"action","Check retrieving htmlFor"),jQuery("#text1").prop("class","test"),equal(document.getElementById("text1").className,"test","Check setting className with 'class'"),equal(jQuery("#text1").prop("maxlength"),30,"Check retrieving maxLength"),jQuery("#table").prop("cellspacing",1),equal(jQuery("#table").prop("cellSpacing"),"1","Check setting and retrieving cellSpacing"),jQuery("#table").prop("cellpadding",1),equal(jQuery("#table").prop("cellPadding"),"1","Check setting and retrieving cellPadding"),jQuery("#table").prop("rowspan",1),equal(jQuery("#table").prop("rowSpan"),1,"Check setting and retrieving rowSpan"),jQuery("#table").prop("colspan",1),equal(jQuery("#table").prop("colSpan"),1,"Check setting and retrieving colSpan"),jQuery("#table").prop("usemap",1),equal(jQuery("#table").prop("useMap"),1,"Check setting and retrieving useMap"),jQuery("#table").prop("frameborder",1),equal(jQuery("#table").prop("frameBorder"),1,"Check setting and retrieving frameBorder"),QUnit.reset();var e=document.body,t=jQuery(e);ok(null===t.prop("nextSibling"),"Make sure a null expando returns null"),e.foo="bar",equal(t.prop("foo"),"bar","Make sure the expando is preferred over the dom attribute"),e.foo=void 0,ok(void 0===t.prop("foo"),"Make sure the expando is preferred over the dom attribute, even if undefined");var a=document.createElement("select"),r=document.createElement("optgroup"),o=document.createElement("option");r.appendChild(o),a.appendChild(r),equal(jQuery(o).prop("selected"),!0,"Make sure that a single option is selected, even when in an optgroup."),equal(jQuery(document).prop("nodeName"),"#document","prop works correctly on document nodes (bug #7451).");var n=document.createAttribute("irrelevant"),s=document.createComment("some comment"),l=document.createTextNode("some text"),i={};jQuery.each([document,n,s,l,i,"#firstp"],function(e,t){strictEqual(jQuery(t).prop("nonexisting"),void 0,"prop works correctly for non existing attributes (bug #7500).")}),i={},jQuery.each([document,i],function(e,t){var a=jQuery(t);a.prop("nonexisting","foo"),equal(a.prop("nonexisting"),"foo","prop(name, value) works correctly for non existing attributes (bug #7500).")}),jQuery(document).removeProp("nonexisting");var u=jQuery("#form").prop("enctype","multipart/form-data");equal(u.prop("enctype"),"multipart/form-data","Set the enctype of a form (encoding in IE6/7 #6743)")}),test("prop('tabindex')",function(){expect(8),equal(jQuery("#listWithTabIndex").prop("tabindex"),5,"not natively tabbable, with tabindex set to 0"),equal(jQuery("#divWithNoTabIndex").prop("tabindex"),void 0,"not natively tabbable, no tabindex set"),equal(jQuery("#linkWithNoTabIndex").prop("tabindex"),0,"anchor with href, no tabindex set"),equal(jQuery("#linkWithTabIndex").prop("tabindex"),2,"anchor with href, tabindex set to 2"),equal(jQuery("#linkWithNegativeTabIndex").prop("tabindex"),-1,"anchor with href, tabindex set to -1"),equal(jQuery("#linkWithNoHrefWithNoTabIndex").prop("tabindex"),void 0,"anchor without href, no tabindex set"),equal(jQuery("#linkWithNoHrefWithTabIndex").prop("tabindex"),1,"anchor without href, tabindex set to 2"),equal(jQuery("#linkWithNoHrefWithNegativeTabIndex").prop("tabindex"),-1,"anchor without href, no tabindex set")}),test("prop('tabindex', value)",10,function(){var e,t=jQuery("#divWithNoTabIndex");equal(t.prop("tabindex"),void 0,"start with no tabindex"),t.prop("tabindex","1"),equal(t.prop("tabindex"),1,"set tabindex to 1 (string)"),t.prop("tabindex","0"),equal(t.prop("tabindex"),0,"set tabindex to 0 (string)"),t.prop("tabindex","-1"),equal(t.prop("tabindex"),-1,"set tabindex to -1 (string)"),t.prop("tabindex",1),equal(t.prop("tabindex"),1,"set tabindex to 1 (number)"),t.prop("tabindex",0),equal(t.prop("tabindex"),0,"set tabindex to 0 (number)"),t.prop("tabindex",-1),equal(t.prop("tabindex"),-1,"set tabindex to -1 (number)"),t=jQuery("#linkWithTabIndex"),equal(t.prop("tabindex"),2,"start with tabindex 2"),t.prop("tabindex",-1),equal(t.prop("tabindex"),-1,"set negative tabindex"),e=t.clone(),e.prop("tabindex",1),equal(e[0].getAttribute("tabindex"),"1","set tabindex on cloned element")}),test("removeProp(String)",function(){expect(6);var e=document.createAttribute("irrelevant"),t=document.createComment("some comment"),a=document.createTextNode("some text"),r={};strictEqual(jQuery("#firstp").prop("nonexisting","foo").removeProp("nonexisting")[0].nonexisting,void 0,"removeprop works correctly on DOM element nodes"),jQuery.each([document,r],function(e,t){var a=jQuery(t);a.prop("nonexisting","foo").removeProp("nonexisting"),strictEqual(t.nonexisting,void 0,"removeProp works correctly on non DOM element nodes (bug #7500).")}),jQuery.each([t,a,e],function(e,t){var a=jQuery(t);a.prop("nonexisting","foo").removeProp("nonexisting"),strictEqual(t.nonexisting,void 0,"removeProp works correctly on non DOM element nodes (bug #7500).")})}),test("val()",function(){if(expect(21+(jQuery.fn.serialize?6:0)),document.getElementById("text1").value="bla",equal(jQuery("#text1").val(),"bla","Check for modified value of input element"),QUnit.reset(),equal(jQuery("#text1").val(),"Test","Check for value of input element"),equal(jQuery("#first").val(),"","Check a paragraph element to see if it has a value"),ok(void 0===jQuery([]).val(),"Check an empty jQuery object will return undefined from val"),equal(jQuery("#select2").val(),"3",'Call val() on a single="single" select'),deepEqual(jQuery("#select3").val(),["1","2"],'Call val() on a multiple="multiple" select'),equal(jQuery("#option3c").val(),"2","Call val() on a option element with value"),equal(jQuery("#option3a").val(),"","Call val() on a option element with empty value"),equal(jQuery("#option3e").val(),"no value","Call val() on a option element with no value attribute"),equal(jQuery("#option3a").val(),"","Call val() on a option element with no value attribute"),jQuery("#select3").val(""),deepEqual(jQuery("#select3").val(),[""],'Call val() on a multiple="multiple" select'),deepEqual(jQuery("#select4").val(),[],'Call val() on multiple="multiple" select with all disabled options'),jQuery("#select4 optgroup").add("#select4 > [disabled]").attr("disabled",!1),deepEqual(jQuery("#select4").val(),["2","3"],'Call val() on multiple="multiple" select with some disabled options'),jQuery("#select4").attr("disabled",!0),deepEqual(jQuery("#select4").val(),["2","3"],'Call val() on disabled multiple="multiple" select'),equal(jQuery("#select5").val(),"3","Check value on ambiguous select."),jQuery("#select5").val(1),equal(jQuery("#select5").val(),"1","Check value on ambiguous select."),jQuery("#select5").val(3),equal(jQuery("#select5").val(),"3","Check value on ambiguous select."),strictEqual(jQuery("<select name='select12584' id='select12584'><option value='1' disabled='disabled'>1</option></select>").val(),null,"Select-one with only option disabled (#12584)"),jQuery.fn.serialize){var e=jQuery("<input type='checkbox' name='test' value='1'/><input type='checkbox' name='test' value='2'/><input type='checkbox' name='test' value=''/><input type='checkbox' name='test'/>").appendTo("#form");deepEqual(e.serialize(),"","Get unchecked values."),equal(e.eq(3).val(),"on","Make sure a value of 'on' is provided if none is specified."),e.val(["2"]),deepEqual(e.serialize(),"test=2","Get a single checked value."),e.val(["1",""]),deepEqual(e.serialize(),"test=1&test=","Get multiple checked values."),e.val(["","2"]),deepEqual(e.serialize(),"test=2&test=","Get multiple checked values."),e.val(["1","on"]),deepEqual(e.serialize(),"test=1&test=on","Get multiple checked values."),e.remove()}var t=jQuery("<button value='foobar'>text</button>").insertAfter("#button");equal(t.val(),"foobar","Value retrieval on a button does not return innerHTML"),equal(t.val("baz").html(),"text","Setting the value does not change innerHTML"),equal(jQuery("<option/>").val("test").attr("value"),"test","Setting value sets the value attribute")}),"value"in document.createElement("meter")&&"value"in document.createElement("progress")&&test("val() respects numbers without exception (Bug #9319)",function(){expect(4);var e=jQuery("<meter min='0' max='10' value='5.6'></meter>"),t=jQuery("<progress max='10' value='1.5'></progress>");try{equal(typeof e.val(),"number","meter, returns a number and does not throw exception"),equal(e.val(),e[0].value,"meter, api matches host and does not throw exception"),equal(typeof t.val(),"number","progress, returns a number and does not throw exception"),equal(t.val(),t[0].value,"progress, api matches host and does not throw exception")}catch(a){}e.remove(),t.remove()});var testVal=function(e){expect(8),QUnit.reset(),jQuery("#text1").val(e("test")),equal(document.getElementById("text1").value,"test","Check for modified (via val(String)) value of input element"),jQuery("#text1").val(e(void 0)),equal(document.getElementById("text1").value,"","Check for modified (via val(undefined)) value of input element"),jQuery("#text1").val(e(67)),equal(document.getElementById("text1").value,"67","Check for modified (via val(Number)) value of input element"),jQuery("#text1").val(e(null)),equal(document.getElementById("text1").value,"","Check for modified (via val(null)) value of input element");var t=jQuery("#select1");t.val(e("3")),equal(t.val(),"3","Check for modified (via val(String)) value of select element"),t.val(e(2)),equal(t.val(),"2","Check for modified (via val(Number)) value of select element"),t.append("<option value='4'>four</option>"),t.val(e(4)),equal(t.val(),"4","Should be possible to set the val() to a newly created option");var a=jQuery("#nonnodes").contents();a.val(e("asdf")),equal(a.val(),"asdf","Check node,textnode,comment with val()"),a.removeAttr("value")};test("val(String/Number)",function(){testVal(bareObj)}),test("val(Function)",function(){testVal(functionReturningObj)}),test("val(Array of Numbers) (Bug #7123)",function(){expect(4),jQuery("#form").append("<input type='checkbox' name='arrayTest' value='1' /><input type='checkbox' name='arrayTest' value='2' /><input type='checkbox' name='arrayTest' value='3' checked='checked' /><input type='checkbox' name='arrayTest' value='4' />");var e=jQuery("input[name=arrayTest]").val([1,2]);ok(e[0].checked,"First element was checked"),ok(e[1].checked,"Second element was checked"),ok(!e[2].checked,"Third element was unchecked"),ok(!e[3].checked,"Fourth element remained unchecked"),e.remove()}),test("val(Function) with incoming value",function(){expect(10),QUnit.reset();var e=jQuery("#text1").val();jQuery("#text1").val(function(t,a){return equal(a,e,"Make sure the incoming value is correct."),"test"}),equal(document.getElementById("text1").value,"test","Check for modified (via val(String)) value of input element"),e=jQuery("#text1").val(),jQuery("#text1").val(function(t,a){return equal(a,e,"Make sure the incoming value is correct."),67
}),equal(document.getElementById("text1").value,"67","Check for modified (via val(Number)) value of input element"),e=jQuery("#select1").val(),jQuery("#select1").val(function(t,a){return equal(a,e,"Make sure the incoming value is correct."),"3"}),equal(jQuery("#select1").val(),"3","Check for modified (via val(String)) value of select element"),e=jQuery("#select1").val(),jQuery("#select1").val(function(t,a){return equal(a,e,"Make sure the incoming value is correct."),2}),equal(jQuery("#select1").val(),"2","Check for modified (via val(Number)) value of select element"),jQuery("#select1").append("<option value='4'>four</option>"),e=jQuery("#select1").val(),jQuery("#select1").val(function(t,a){return equal(a,e,"Make sure the incoming value is correct."),4}),equal(jQuery("#select1").val(),"4","Should be possible to set the val() to a newly created option")}),test("val(select) after form.reset() (Bug #2551)",function(){expect(3),jQuery("<form id='kk' name='kk'><select id='kkk'><option value='cf'>cf</option><option value='gf'>gf</option></select></form>").appendTo("#qunit-fixture"),jQuery("#kkk").val("gf"),document.kk.reset(),equal(jQuery("#kkk")[0].value,"cf","Check value of select after form reset."),equal(jQuery("#kkk").val(),"cf","Check value of select after form reset."),deepEqual(jQuery("#select3").val(),["1","2"],'Call val() on a multiple="multiple" select'),jQuery("#kk").remove()});var testAddClass=function(e){expect(9);var t=jQuery("div");t.addClass(e("test"));for(var a=!0,r=0;r<t.size();r++)~t.get(r).className.indexOf("test")||(a=!1);ok(a,"Add Class");var o=jQuery("#nonnodes").contents();o.addClass(e("asdf")),ok(o.hasClass("asdf"),"Check node,textnode,comment for addClass"),t=jQuery("<div/>"),t.addClass(e("test")),equal(t.attr("class"),"test","Make sure there's no extra whitespace."),t.attr("class"," foo"),t.addClass(e("test")),equal(t.attr("class"),"foo test","Make sure there's no extra whitespace."),t.attr("class","foo"),t.addClass(e("bar baz")),equal(t.attr("class"),"foo bar baz","Make sure there isn't too much trimming."),t.removeClass(),t.addClass(e("foo")).addClass(e("foo")),equal(t.attr("class"),"foo","Do not add the same class twice in separate calls."),t.addClass(e("fo")),equal(t.attr("class"),"foo fo","Adding a similar class does not get interrupted."),t.removeClass().addClass("wrap2"),ok(t.addClass("wrap").hasClass("wrap"),"Can add similarly named classes"),t.removeClass(),t.addClass(e("bar bar")),equal(t.attr("class"),"bar","Do not add the same class twice in the same call.")};test("addClass(String)",function(){testAddClass(bareObj)}),test("addClass(Function)",function(){testAddClass(functionReturningObj)}),test("addClass(Function) with incoming value",function(){expect(48);var e=jQuery("div"),t=e.map(function(){return jQuery(this).attr("class")||""});e.addClass(function(e,a){return"_firebugConsole"!==this.id?(equal(a,t[e],"Make sure the incoming value is correct."),"test"):void 0});for(var a=!0,r=0;r<e.length;r++)-1==e.get(r).className.indexOf("test")&&(a=!1);ok(a,"Add Class")});var testRemoveClass=function(e){expect(7);var t=jQuery("div");t.addClass("test").removeClass(e("test")),ok(!t.is(".test"),"Remove Class"),QUnit.reset(),t=jQuery("div"),t.addClass("test").addClass("foo").addClass("bar"),t.removeClass(e("test")).removeClass(e("bar")).removeClass(e("foo")),ok(!t.is(".test,.bar,.foo"),"Remove multiple classes"),QUnit.reset(),t=jQuery("div"),t.eq(0).addClass("test").removeClass(e(null)),ok(t.eq(0).is(".test"),"Null value passed to removeClass"),t.eq(0).addClass("test").removeClass(e("")),ok(t.eq(0).is(".test"),"Empty string passed to removeClass");var a=jQuery("#nonnodes").contents();a.removeClass(e("asdf")),ok(!a.hasClass("asdf"),"Check node,textnode,comment for removeClass");var r=document.createElement("div");r.className=" test foo ",jQuery(r).removeClass(e("foo")),equal(r.className,"test","Make sure remaining className is trimmed."),r.className=" test ",jQuery(r).removeClass(e("test")),equal(r.className,"","Make sure there is nothing left after everything is removed.")};test("removeClass(String) - simple",function(){testRemoveClass(bareObj)}),test("removeClass(Function) - simple",function(){testRemoveClass(functionReturningObj)}),test("removeClass(Function) with incoming value",function(){expect(48);var e=jQuery("div").addClass("test"),t=e.map(function(){return jQuery(this).attr("class")});e.removeClass(function(e,a){return"_firebugConsole"!==this.id?(equal(a,t[e],"Make sure the incoming value is correct."),"test"):void 0}),ok(!e.is(".test"),"Remove Class"),QUnit.reset()}),test("removeClass() removes duplicates",function(){expect(1);var e=jQuery(jQuery.parseHTML("<div class='x x x'></div>"));e.removeClass("x"),ok(!e.hasClass("x"),"Element with multiple same classes does not escape the wrath of removeClass()")});var testToggleClass=function(e){expect(17);var t=jQuery("#firstp");ok(!t.is(".test"),"Assert class not present"),t.toggleClass(e("test")),ok(t.is(".test"),"Assert class present"),t.toggleClass(e("test")),ok(!t.is(".test"),"Assert class not present"),t.toggleClass(e("test"),!1),ok(!t.is(".test"),"Assert class not present"),t.toggleClass(e("test"),!0),ok(t.is(".test"),"Assert class present"),t.toggleClass(e("test"),!1),ok(!t.is(".test"),"Assert class not present"),t.addClass("testA testB"),ok(t.is(".testA.testB"),"Assert 2 different classes present"),t.toggleClass(e("testB testC")),ok(t.is(".testA.testC")&&!t.is(".testB"),"Assert 1 class added, 1 class removed, and 1 class kept"),t.toggleClass(e("testA testC")),ok(!t.is(".testA")&&!t.is(".testB")&&!t.is(".testC"),"Assert no class present"),t.toggleClass(!0),ok(""===t[0].className,"Assert class is empty (data was empty)"),t.addClass("testD testE"),ok(t.is(".testD.testE"),"Assert class present"),t.toggleClass(),ok(!t.is(".testD.testE"),"Assert class not present"),ok("testD testE"===jQuery._data(t[0],"__className__"),"Assert data was stored"),t.toggleClass(),ok(t.is(".testD.testE"),"Assert class present (restored from data)"),t.toggleClass(!1),ok(!t.is(".testD.testE"),"Assert class not present"),t.toggleClass(!0),ok(t.is(".testD.testE"),"Assert class present (restored from data)"),t.toggleClass(),t.toggleClass(!1),t.toggleClass(),ok(t.is(".testD.testE"),"Assert class present (restored from data)"),t.removeClass("testD"),jQuery.removeData(t[0],"__className__",!0)};test("toggleClass(String|boolean|undefined[, boolean])",function(){testToggleClass(bareObj)}),test("toggleClass(Function[, boolean])",function(){testToggleClass(functionReturningObj)}),test("toggleClass(Fucntion[, boolean]) with incoming value",function(){expect(14);var e=jQuery("#firstp"),t=e.attr("class")||"";ok(!e.is(".test"),"Assert class not present"),e.toggleClass(function(e,a){return equal(t,a,"Make sure the incoming value is correct."),"test"}),ok(e.is(".test"),"Assert class present"),t=e.attr("class"),e.toggleClass(function(e,a){return equal(t,a,"Make sure the incoming value is correct."),"test"}),ok(!e.is(".test"),"Assert class not present"),t=e.attr("class")||"",e.toggleClass(function(e,a,r){return equal(t,a,"Make sure the incoming value is correct."),equal(r,!1,"Make sure that the state is passed in."),"test"},!1),ok(!e.is(".test"),"Assert class not present"),t=e.attr("class")||"",e.toggleClass(function(e,a,r){return equal(t,a,"Make sure the incoming value is correct."),equal(r,!0,"Make sure that the state is passed in."),"test"},!0),ok(e.is(".test"),"Assert class present"),t=e.attr("class"),e.toggleClass(function(e,a,r){return equal(t,a,"Make sure the incoming value is correct."),equal(r,!1,"Make sure that the state is passed in."),"test"},!1),ok(!e.is(".test"),"Assert class not present"),e.removeClass("test"),jQuery.removeData(e[0],"__className__",!0)}),test("addClass, removeClass, hasClass",function(){expect(17);var e=jQuery("<p>Hi</p>"),t=e[0];e.addClass("hi"),equal(t.className,"hi","Check single added class"),e.addClass("foo bar"),equal(t.className,"hi foo bar","Check more added classes"),e.removeClass(),equal(t.className,"","Remove all classes"),e.addClass("hi foo bar"),e.removeClass("foo"),equal(t.className,"hi bar","Check removal of one class"),ok(e.hasClass("hi"),"Check has1"),ok(e.hasClass("bar"),"Check has2"),e=jQuery("<p class='class1\nclass2	cla.ss3\n\rclass4'></p>"),ok(e.hasClass("class1"),"Check hasClass with line feed"),ok(e.is(".class1"),"Check is with line feed"),ok(e.hasClass("class2"),"Check hasClass with tab"),ok(e.is(".class2"),"Check is with tab"),ok(e.hasClass("cla.ss3"),"Check hasClass with dot"),ok(e.hasClass("class4"),"Check hasClass with carriage return"),ok(e.is(".class4"),"Check is with carriage return"),e.removeClass("class2"),ok(e.hasClass("class2")===!1,"Check the class has been properly removed"),e.removeClass("cla"),ok(e.hasClass("cla.ss3"),"Check the dotted class has not been removed"),e.removeClass("cla.ss3"),ok(e.hasClass("cla.ss3")===!1,"Check the dotted class has been removed"),e.removeClass("class4"),ok(e.hasClass("class4")===!1,"Check the class has been properly removed")}),test("contents().hasClass() returns correct values",function(){expect(2);var e=jQuery("<div><span class='foo'></span><!-- comment -->text</div>"),t=e.contents();ok(t.hasClass("foo"),"Found 'foo' in $contents"),ok(!t.hasClass("undefined"),"Did not find 'undefined' in $contents (correctly)")}),test("coords returns correct values in IE6/IE7, see #10828",function(){expect(2);var e,t=jQuery("<map />");e=t.html("<area shape='rect' coords='0,0,0,0' href='#' alt='a' />").find("area"),equal(e.attr("coords"),"0,0,0,0","did not retrieve coords correctly"),e=t.html("<area shape='rect' href='#' alt='a' /></map>").find("area"),equal(e.attr("coords"),void 0,"did not retrieve coords correctly")});