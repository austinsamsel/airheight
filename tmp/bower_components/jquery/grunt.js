var child_process=require("child_process");module.exports=function(e){"use strict";function s(s){var r={};try{r=e.file.readJSON(s),e.verbose.write("Reading "+s+"...").ok()}catch(t){}return r}var r=(e.task,e.file),t=(e.utils,e.log),i=e.verbose,n=(e.fail,e.option,e.config),a=(e.template,["dist/jquery.js","dist/jquery.min.js"]);e.initConfig({pkg:"<json:package.json>",dst:s("dist/.destination.json"),meta:{banner:"/*! jQuery v<%= pkg.version %> jquery.com | jquery.org/license */"},compare_size:{files:a},selector:{"src/selector.js":["src/sizzle-jquery.js","src/sizzle/sizzle.js"]},build:{"dist/jquery.js":["src/intro.js","src/core.js","src/callbacks.js","src/deferred.js","src/support.js","src/data.js","src/queue.js","src/attributes.js","src/event.js","src/selector.js","src/traversing.js","src/manipulation.js",{flag:"deprecated",src:"src/deprecated.js"},{flag:"css",src:"src/css.js"},"src/serialize.js",{flag:"ajax",src:"src/ajax.js"},{flag:"ajax/jsonp",src:"src/ajax/jsonp.js",needs:["ajax","ajax/script"]},{flag:"ajax/script",src:"src/ajax/script.js",needs:["ajax"]},{flag:"ajax/xhr",src:"src/ajax/xhr.js",needs:["ajax"]},{flag:"effects",src:"src/effects.js",needs:["css"]},{flag:"offset",src:"src/offset.js",needs:["css"]},{flag:"dimensions",src:"src/dimensions.js",needs:["css"]},"src/exports.js","src/outro.js"]},min:{"dist/jquery.min.js":["<banner>","dist/jquery.js"]},lint:{dist:"dist/jquery.js",grunt:"grunt.js",tests:"test/unit/**/*.js"},jshint:function(){function e(e){return s((e||"")+".jshintrc")||{}}return{options:e(),dist:e("src/"),tests:e("test/")}}(),qunit:{files:"test/index.html"},watch:{files:["<config:lint.grunt>","<config:lint.tests>","src/**/*.js"],tasks:"dev"},uglify:{codegen:{ascii_only:!0}}}),e.registerTask("default","submodules selector build:*:* lint min dist:* compare_size"),e.registerTask("dev","selector build:*:* lint"),e.loadNpmTasks("grunt-compare-size"),e.loadNpmTasks("grunt-git-authors"),e.registerTask("testswarm",function(s,r){var t=require("testswarm"),i=[],n=e.file.readJSON(r).jquery,a="ajax attributes callbacks core css data deferred dimensions effects event manipulation offset queue serialize support traversing Sizzle".split(" ");a.forEach(function(e){i.push(n.testUrl+s+"/test/index.html?module="+e)}),t({url:n.swarmUrl,pollInterval:1e4,timeout:18e5,done:this.async()},{authUsername:n.authUsername,authToken:n.authToken,jobName:'jQuery commit #<a href="https://github.com/jquery/jquery/commit/'+s+'">'+s.substr(0,10)+"</a>",runMax:n.runMax,"runNames[]":a,"runUrls[]":i,"browserSets[]":["popular"]})}),e.registerMultiTask("selector","Build src/selector.js",function(){var e,s,n=this.file.dest,a=this.file.src,c={api:r.read(a[0]),src:r.read(a[1])};return s=c.src.split("// EXPOSE"),s[1]=c.api,e=s.join(""),i.write("Injected sizzle-jquery.js into sizzle.js"),r.write(n,e),this.errorCount?!1:void t.writeln("File '"+n+"' created.")}),e.registerTask("custom",function(){var s=this.async(),r=[].slice.call(arguments),t=r.length?r[0].replace(/,/g,":"):"";e.log.writeln("Creating custom build...\n"),e.utils.spawn({cmd:"grunt",args:["build:*:*:"+t,"min"]},function(r,t){return r?(e.verbose.error(),void s(r)):(e.log.writeln(t.replace("Done, without errors.","")),void s())})}),e.registerMultiTask("build","Concatenate source (include/exclude modules with +/- flags), embed date/version",function(){var s="",i=this.flags,a=Object.keys(i).length>1,c=!i["*"],o=this.file.dest,l={},u=n("pkg.version"),d=function(e,s){!c||i[e]||i["+"+e]||(l[e]=!1),l[s]||i["-"+e]?l[e]=!0:i["+"+e]&&l[s]===!1&&delete l[s]};return process.env.COMMIT&&(u+=" "+process.env.COMMIT),this.file.src.forEach(function(e){var s=e.flag;s&&(d(s),e.needs&&e.needs.forEach(function(e){d(s,e)}))}),Object.keys(l).length&&(u+=" -"+Object.keys(l).join(",-"),e.config.set("pkg.version",u)),this.file.src.forEach(function(t){var n=t.flag,c=!1,o=!1,u="";n&&(void 0!==l[n]?(u=("Excluding "+n).red,c=!0,o=!0):(u=("Including "+n).green,i["+"+n]&&(c=!0)),a&&c&&e.log.writetableln([27,30],[u,("("+t.src+")").grey]),t=t.src),o||(s+=r.read(t))}),s=s.replace("@DATE",new Date).replace(/@VERSION/g,u),r.write(o,s),this.errorCount?!1:void t.writeln("File '"+o+"' created.")}),e.registerTask("submodules",function(){var s=this.async(),r="if [ -d .git ]; then \nif git submodule status | grep -q -E '^-'; then \ngit submodule update --init --recursive; \nelse \ngit submodule update --init --recursive --merge; \nfi; \nfi;";e.verbose.write("Updating submodules..."),child_process.exec(r,function(r,t,i){return i?(console.log(i),e.verbose.error(),void s(i)):(e.log.writeln(t),void s())})}),e.registerTask("dist",function(){var e,s,i;i=Object.keys(n("dst")),e=Object.keys(this.flags),s=[].concat(i,e).filter(function(e){return"*"!==e});var c=require("fs"),o=!1;return a.forEach(function(e){var s,r,i=c.readFileSync(e,"utf8");if(i.length!==Buffer.byteLength(i,"utf8"))for(t.writeln(e+": Non-ASCII characters detected:"),s=0;s<i.length;s++)r=i.charCodeAt(s),r>127&&(t.writeln("- position "+s+": "+r),t.writeln("-- "+i.substring(s-20,s+20)),o=!0)}),o?!1:void(s.length&&a.forEach(function(e){s.forEach(function(s){var i;return/\/$/.test(s)||(s+="/"),i=s+e.replace("dist/",""),/^\//.test(s)?(r.write(i,r.read(e)),void t.writeln("File '"+i+"' created.")):void t.error("File '"+i+"' was NOT created.")})}))})};