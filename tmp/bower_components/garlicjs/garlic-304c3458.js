!function(e){"use strict";var t=function(){this.defined="undefined"!=typeof localStorage};t.prototype={constructor:t,get:function(e,t){return localStorage.getItem(e)?localStorage.getItem(e):"undefined"!=typeof t?t:null},has:function(e){return localStorage.getItem(e)?!0:!1},set:function(e,t,n){return"string"==typeof t&&(""===t?this.destroy(e):localStorage.setItem(e,t)),"function"==typeof n?n():!0},destroy:function(e,t){return localStorage.removeItem(e),"function"==typeof t?t():!0},clean:function(e){for(var t=localStorage.length-1;t>=0;t--)"undefined"==typeof Array.indexOf&&-1!==localStorage.key(t).indexOf("garlic:")&&localStorage.removeItem(localStorage.key(t));return"function"==typeof e?e():!0},clear:function(e){return localStorage.clear(),"function"==typeof e?e():!0}};var n=function(e,t,n){this.init("garlic",e,t,n)};n.prototype={constructor:n,init:function(t,n,i,r){this.type=t,this.$element=e(n),this.options=this.getOptions(r),this.storage=i,this.path=this.options.getPath(this.$element)||this.getPath(),this.parentForm=this.$element.closest("form"),this.$element.addClass("garlic-auto-save"),this.expiresFlag=this.options.expires?(this.$element.data("expires")?this.path:this.getPath(this.parentForm))+"_flag":!1,this.$element.on(this.options.events.join("."+this.type+" "),!1,e.proxy(this.persist,this)),this.options.destroy&&e(this.parentForm).on("submit reset",!1,e.proxy(this.destroy,this)),this.retrieve()},getOptions:function(t){return e.extend({},e.fn[this.type].defaults,t,this.$element.data())},persist:function(){this.val!==this.getVal()&&(this.val=this.getVal(),this.options.expires&&this.storage.set(this.expiresFlag,((new Date).getTime()+1e3*this.options.expires).toString()),this.storage.set(this.path,this.getVal()),this.options.onPersist(this.$element,this.getVal()))},getVal:function(){return this.$element.is("input[type=checkbox]")?this.$element.prop("checked")?"checked":"unchecked":this.$element.val()},retrieve:function(){if(this.storage.has(this.path)){if(this.options.expires){var e=(new Date).getTime();if(this.storage.get(this.expiresFlag)<e.toString())return void this.storage.destroy(this.path);this.$element.attr("expires-in",Math.floor((parseInt(this.storage.get(this.expiresFlag))-e)/1e3))}var t=this.storage.get(this.path);return this.options.conflictManager.enabled&&this.detectConflict()?this.conflictManager():this.$element.is("input[type=radio], input[type=checkbox]")?"checked"===t||this.$element.val()===t?this.$element.attr("checked",!0):void("unchecked"===t&&this.$element.attr("checked",!1)):(this.$element.val(t),this.$element.trigger("input"),void this.options.onRetrieve(this.$element,t))}},detectConflict:function(){var t=this;if(this.$element.is("input[type=checkbox], input[type=radio]"))return!1;if(this.$element.val()&&this.storage.get(this.path)!==this.$element.val()){if(this.$element.is("select")){var n=!1;return this.$element.find("option").each(function(){return 0!==e(this).index()&&e(this).attr("selected")&&e(this).val()!==t.storage.get(this.path)?void(n=!0):void 0}),n}return!0}return!1},conflictManager:function(){return"function"!=typeof this.options.conflictManager.onConflictDetected||this.options.conflictManager.onConflictDetected(this.$element,this.storage.get(this.path))?(this.options.conflictManager.garlicPriority?(this.$element.data("swap-data",this.$element.val()),this.$element.data("swap-state","garlic"),this.$element.val(this.storage.get(this.path))):(this.$element.data("swap-data",this.storage.get(this.path)),this.$element.data("swap-state","default")),this.swapHandler(),this.$element.addClass("garlic-conflict-detected"),void this.$element.closest("input[type=submit]").attr("disabled",!0)):!1},swapHandler:function(){var t=e(this.options.conflictManager.template);this.$element.after(t.text(this.options.conflictManager.message)),t.on("click",!1,e.proxy(this.swap,this))},swap:function(){var t=this.$element.data("swap-data");this.$element.data("swap-state","garlic"===this.$element.data("swap-state")?"default":"garlic"),this.$element.data("swap-data",this.$element.val()),e(this.$element).val(t)},destroy:function(){this.storage.destroy(this.path)},remove:function(){return this.remove(),this.$element.is("input[type=radio], input[type=checkbox]")?void e(this.$element).prop("checked",!1):void this.$element.val("")},getPath:function(t){if("undefined"==typeof t&&(t=this.$element),this.options.getPath(t))return this.options.getPath(t);if(1!=t.length)return!1;for(var n="",i=t.is("input[type=checkbox]"),r=t;r.length;){var s=r[0],o=s.nodeName;if(!o)break;o=o.toLowerCase();var a=r.parent(),l=a.children(o);if(e(s).is("form, input, select, textarea")||i){if(o+=e(s).attr("name")?"."+e(s).attr("name"):"",l.length>1&&!e(s).is("input[type=radio]")&&(o+=":eq("+l.index(s)+")"),n=o+(n?">"+n:""),"form"==s.nodeName.toLowerCase())break;r=a}else r=a}return"garlic:"+document.domain+(this.options.domain?"*":window.location.pathname)+">"+n},getStorage:function(){return this.storage}},e.fn.garlic=function(i,r){function s(t){var r=e(t),s=r.data("garlic"),l=e.extend({},o,r.data());if(("undefined"==typeof l.storage||l.storage)&&"password"!==e(t).attr("type"))return s||r.data("garlic",s=new n(t,a,l)),"string"==typeof i&&"function"==typeof s[i]?s[i]():void 0}var o=e.extend(!0,{},e.fn.garlic.defaults,i,this.data()),a=new t,l=!1;return a.defined?(this.each(function(){if(e(this).is("form"))e(this).find(o.inputs).each(function(){e(this).is(o.excluded)||(l=s(e(this)))});else if(e(this).is(o.inputs)){if(e(this).is(o.excluded))return;l=s(e(this))}}),"function"==typeof r?r():l):!1},e.fn.garlic.Constructor=n,e.fn.garlic.defaults={destroy:!0,inputs:"input, textarea, select",excluded:'input[type="file"], input[type="hidden"]',events:["DOMAttrModified","textInput","input","change","click","keypress","paste","focus"],domain:!1,expires:!1,conflictManager:{enabled:!1,garlicPriority:!0,template:'<span class="garlic-swap"></span>',message:"This is your saved data. Click here to see default one",onConflictDetected:function(){return!0}},getPath:function(){},onRetrieve:function(){},onPersist:function(){}},e(window).on("load",function(){e('[data-persist="garlic"]').each(function(){e(this).garlic()})})}(window.jQuery||window.Zepto);